data perf;
infile "/home/n3401172280/summer2020/ML_project/statistical.csv" firstobs=2 dsd;
input AUC datasize dataset $ algorithm $;
run;
proc print data=perf(obs=20);run;


data perf2;
	set perf;
	where dataset = 'MLIT_V';
	if datasize le 4 then stable = "unstable";
	else stable = "stable";
	run;
proc print data=perf2;run;

*Figure 2C, 2D;
proc glm data=perf2;
class stable algorithm;
model AUC = stable algorithm;
means stable / hovtest=levene;
run;

*Data for Figure 3D, 4B, 4D;
data pairw;
infile "/home/n3401172280/summer2020/ML_project/pairw.csv" firstobs=2 dsd;
input dataset $ datasize lr rf gb;
run;
proc print data=pairw(obs=10);run;

proc ttest data=pairw;
where dataset = 'MLIT_V' and datasize < 5;*unstable part;
paired lr*rf;
run;
proc ttest data=pairw;
where dataset = 'MLIT_V' and datasize < 5;*unstable part;
paired rf*gb;
run;
proc ttest data=pairw;
where dataset = 'MLIT_V' and datasize < 5;*unstable part;
paired lr*gb;
run;

proc ttest data=pairw;
where dataset = 'MLIT_V' and datasize > 4;*Stable part;
paired lr*rf;
run;
proc ttest data=pairw;
where dataset = 'MLIT_V' and datasize > 4;*Stable part;
paired rf*gb;
run;
proc ttest data=pairw;
where dataset = 'MLIT_V' and datasize > 4;*Stable part;
paired lr*gb;
run;

* total 5 training sets generated by different random seed;
data perf_ran;
infile "/home/n3401172280/summer2020/ML_project/perf_random.csv" firstobs=2 dsd;
input algorithm $ datasize auc rnum;
if datasize <=5 then stable = 1;
else stable = 2;
run;
proc print data=perf_ran;run;

proc glm data=perf_ran;
where stable = 2;
class algorithm datasize rnum;
model auc = algorithm datasize rnum;
means algorithm/bon;
run;

proc glm data=perf_ran;
class algorithm datasize rnum;
model auc =  algorithm rnum(algorithm) datasize algorithm*datasize;
means datasize /bon;
run;

proc glm data=perf_ran;
where stable = 1;
class algorithm datasize rnum;
model auc =  algorithm rnum(algorithm) datasize algorithm*datasize;
means algorithm /bon;
run;

data perf_ran_s;
set perf_ran;
where stable = 2;
where algorithm = 'rf' or algorithm = 'gb';
run;
proc print data=perf_ran_s(obs=10);run;

proc glm data=perf_ran;
class  algorithm rnum stable;
model auc =  algorithm rnum stable;
means algorithm/bon cldiff clm alpha=0.05;
run;


*Figure 4B. Comparison in INDTS1 and INDTS2;

*Repeated Measure ANOVA;
data pairw;
infile "/home/n3401172280/summer2020/ML_project/pairwise_worand.csv" firstobs=2 dsd;
input id datasize rnum algorithm $ auc dataset $;
run;
proc print data=pairw(obs=20);run;

proc glm data = pairw;
where dataset='INDTS1';
class datasize algorithm rnum;
model auc = datasize algorithm rnum;
means algorithm / bon;
run;

proc glm data=pairw;
where dataset='INDTS1';
class datasize algorithm rnum;
model auc =  algorithm rnum(algorithm) datasize algorithm*datasize;
means algorithm/bon;
run;
proc glm data=pairw;
where dataset='INDTS2';
class datasize algorithm rnum;
model auc =  algorithm rnum(algorithm) datasize algorithm*datasize;
means algorithm/bon;
run;
*Pairwise t-test;
data pairw;
infile "/home/n3401172280/summer2020/ML_project/pairwise.csv" firstobs=2 dsd;
input id datasize rnum lr rf gb dataset $;
run;
proc print data=pairw;run;
proc ttest data=pairw;
where dataset = 'INDTS1';
paired lr*rf;
run;

proc ttest data=pairw;
where dataset = 'INDTS1';
paired rf*gb;
run;

proc ttest data=pairw;
where dataset = 'INDTS1';
paired lr*gb;
run;

*Figure 4D. pairwise ttest in INDTS2;
proc ttest data=pairw;
where dataset = 'INDTS2';
paired lr*rf;
run;

proc ttest data=pairw;
where dataset = 'INDTS2';
paired rf*gb;
run;

proc ttest data=pairw;
where dataset = 'INDTS2';
paired lr*gb;
run;

*Figure 5C. Nonparametric compare morphological and statistical features (SHAP values) difference;
data nonp;
infile "/home/n3401172280/summer2020/ML_project/shap_table.csv" firstobs=2 dsd;
input shap feature $ category $ transition;
run;
proc print data=nonp(obs=10);run;
proc npar1way wilcoxon data=nonp;
class category;
var shap;
run;

*Figure 5D. Trend test for transition effects on shap value;
proc reg data=nonp;
model shap = transition;
run;

/*  Following is summary of statistical work in ML project */

*Sup_Fig1: algorithm AUC comparison in MLIT-TRn;
data compauc;
input algorithm $ auc @@;
datalines;
lr 0.9741 lr 0.90418354 lr 0.99006211 lr 0.95221027 lr 0.91904762
rf 0.9889 rf 0.93927126 rf 0.9863354 rf 0.97371565 rf 0.96309524
gb 0.9803 gb 0.95006748 gb 0.9826087 gb 0.96654719 gb 0.96190476
;
run;
proc glm data=compauc;
class algorithm;
model auc = algorithm;
means algorithm/bon;
estimate 'gb vs lr' algorithm -1 1 0; *p = 0.22;
estimate 'lr vs rf' algorithm 0 -1 1; *p = 0.18;
estimate 'gb vs rf' algorithm -1 0 1; *p = 0.90;
run;

*Figure 3B;
data perf_ran;
infile "/home/n3401172280/summer2020/ML_project/perf_random.csv" firstobs=2 dsd;
input algorithm $ datasize auc rnum;
run;
proc print data=perf_ran(obs=10);run;

proc glm data=perf_ran;
class algorithm datasize rnum;
model auc = algorithm datasize rnum;
means datasize/bon;
run;



/* One-way ANOVA test (terms including 'algorithm', 'datasize', 'random_number') the difference 
among the each training datasets, after bonferroni correction, we know that there is no difference 
from 1 to 5, and 5 to 10. Then we separated them as two phase: Unstable and Stable.  */

data perf_ran2;
set perf_ran;
if datasize <=5 then stable = 1; * 1 - Unstable, 2 - Stable;
else stable = 2;
run;
proc print data=perf_ran2(obs=10);run;
proc glm data=perf_ran2;
class stable;
model auc = stable; *<0.0001;
means stable / hovtest=bf; * Test the homogenity of variance of two phases, 0.0008;
run;
proc glm data=perf_ran2;
where algorithm = 'lr'; *0.0009;
class stable;
model auc = stable;
run; 
proc glm data=perf_ran2;
where algorithm = 'rf'; *0.3904;
class stable;
model auc = stable;
run; 
proc glm data=perf_ran2;
where algorithm = 'gb'; *<.0001;
class stable;
model auc = stable;
run;


*Figure 3C, 3D;
*pairwise test three algorithm;

data testpw;
infile "/home/n3401172280/summer2020/ML_project/test_pw.csv" firstobs=2 dsd;
input id datasize rnum lr rf gb auc dataset $;
run;
proc print data=testpw;run;
*Unstable phase;
proc ttest data=testpw;
where datasize <= 5;
paired lr*rf;run;
proc ttest data = testpw;
where datasize <= 5;
paired rf*gb;run;
proc ttest data=testpw;
where datasize <= 5;
paired lr*gb;run;
*Stable phase;
proc ttest data=testpw;
where datasize > 5;
paired lr*rf;run;
proc ttest data = testpw;
where datasize > 5;
paired rf*gb;run;
proc ttest data=testpw;
where datasize > 5;
paired lr*gb;run;

*Figure 4B, 4D. One-way ANOVA test two independent datasets;

data indtest;
infile "/home/n3401172280/summer2020/ML_project/pairwise.csv" firstobs=2 dsd;
input id datasize rnum lr rf gb dataset $;
run;
proc ttest data=indtest;
where dataset = 'INDTS1';
paired lr*rf;
run;

proc ttest data=indtest;
where dataset = 'INDTS1';
paired rf*gb;
run;

proc ttest data=indtest;
where dataset = 'INDTS1';
paired lr*gb;
run;

*Figure 4D. pairwise ttest in INDTS2;
proc ttest data=indtest;
where dataset = 'INDTS2';
paired lr*rf;
run;

proc ttest data=indtest;
where dataset = 'INDTS2';
paired rf*gb;
run;

proc ttest data=indtest;
where dataset = 'INDTS2';
paired lr*gb;
run;

*Figure 5C. Nonparametric compare morphological and statistical features (SHAP values) difference;

data shapvalue;
infile "/home/n3401172280/summer2020/ML_project/SHAP_GLM.csv" firstobs=2 dsd;
input id $ shap feature $ rank random transition fe_c $ category $;
run;
proc npar1way wilcoxon data=shapvalue;
where random = 1;
class category;
var shap;
run;
proc npar1way wilcoxon data=shapvalue;
class category;
var shap;
run;
proc reg data=shapvalue;
where rank <=15 and transition <=7;
model shap = transition;
var shap;
run;

* Finished line;



data nonp;
infile "/home/n3401172280/summer2020/ML_project/shap_total.csv" firstobs=2 dsd;
input id $ shap feature $ rank1 rank2 rank3 rank4 rank5 category $ transition c_transition $ rank1_d fe_c $;
if category = 'morpholo' then cate = 1;
else cate = 2;
transq = transition*transition;
run;
proc print data=nonp(obs=10);run;
proc npar1way wilcoxon data=nonp;
class category;
var shap;
run;
proc npar1way wilcoxon data=nonp;
class transition;
var shap;
run;

*Figure 5D. Trend test for transition effects on shap value;

proc reg data=nonp;
where transition <=7 and rank1 <=15;
model shap = transition;
run;

proc reg data=nonp;
*where rank1 <=15;
where transition <=7 and category = 'morpholo';
model shap = transition;
run;

proc glm data = nonp;
class transition;
model shap = transition;
*means transition/bon;
run;

proc npar1way wilcoxon data=nonp;
where transition <=7;
class transition;
var shap;
run;




data nonp_old2;*This data were old version;
infile "/home/n3401172280/summer2020/ML_project/shap_old.csv" firstobs=2 dsd;
input id $ shap feature $ category $ transition rank;
run;
proc print data=nonp_old2(obs=5);run;
proc reg data=nonp_old2;
where category = 'S' and transition <=7;
model shap = transition;
run;

data shapglm;
infile "/home/n3401172280/summer2020/ML_project/SHAP_GLM.csv" firstobs=2 dsd;
input id $ shap feature $ rank random transition fe_c $ category $;
run;
proc print data=shapglm(obs=15);run;
where cate and rank <=15 and random = 1;run;
proc glm data = shapglm;
where transition <=7;
class transition;
model shap = transition;
means transition/bon;
run;
proc reg data=shapglm;
where transition <=7 and rank <=30;
model shap = transition;
run;


proc glm data = shapglm;
class cate fe_c random;
model shap = cate fe_c random;
*means transition/bon;
run;
data tran_inte;
set shapglm;
if transition <=7 then trans = 1;
else trans = 2;
run;
proc npar1way wilcoxon data=tran_inte;
where rank <=15;
class trans;
var shap;
run;
proc glm data=tran_inte;
where rank <=15;
class trans fe_c;
model shap = trans fe_c;
run;
proc npar1way wilcoxon data=tran_inte;
where rank <=15 and transition <=7;
class transition;
var shap;
run;
